// This function takes an automaton A and returns a set of
// couples of states that are differentiable two at a time.
function distinguableStates(A) {
   let F     = A.getFinalStates(),
       Q     = A.getStates(),
       Sigma = A.getAlphabet(),
       delta = A.getTransitionFunction(true);
   
   D     : Set of List = F cross (Q minus F); // The set of couples of differentiable states
   // initialized with final/non final states
   D_pre : Set of List = emptySet;            // value of D during the previous iteration
   X     : Set of List;
   while(D != D_pre) {
      D_pre = D.copy();
      
      X = emptySet; // we find new differentiable states
      foreach(p in Q) {
         foreach(q in Q) {
            if([p, q] !belongsTo D) {
               foreach(a in Sigma) {
                  if([delta(p, a), delta(q, a)] belongsTo D || [delta(q, a), delta(p, a)] belongsTo D) {
                     D.add([p, q]);
                     D.add([q, p]);
                  }
               }
            }
         }
      }
   }
   return D;
}

if(typeof Node === 'function' && typeof document === 'object' && document instanceof Node) {
   run(
      function(A) {
         let res = distinguableStates(A);
         let states = A.getStates().getSortedList();
         let len = states.length;
         let table = document.createElement('table');
         let r, c;
         
         foreach(i in {1,...,len-1}) {
            r = table.insertRow();
            c = document.createElement('th');
            c.textContent = Set.prototype.elementToString(states[i]);
            r.appendChild(c);
            
            foreach(j in {0,...,i-1}) {
               c = r.insertCell();
               if(res contains [states[i], states[j]])
                  c.textContent = 'Ã—';
            }
         }
         r = table.insertRow();
         r.insertCell();
         foreach(j in {0,...,len-2}) {
            c = document.createElement('th');
            c.textContent = Set.prototype.elementToString(states[j]);
            r.appendChild(c);
         }
         
         let div = document.createElement('div');
         let p = document.createElement('pre');
         p.textContent = res.toString();
         div.appendChild(p);
         div.appendChild(table);
         return div;
      }, get_automaton(currentAutomaton)
   );
}
else {
   run(distinguableStates, get_automaton(currentAutomaton));
}