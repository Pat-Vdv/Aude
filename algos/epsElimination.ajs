function add(setStates, trans, q)
    if setStates contains q then
        return
    end if

    setStates.add(q)
    
    foreach qd in trans(q, epsilon) do
        add(setStates, trans, qd)
    done
end function

export function epsElim(A)
    let ElimA := new Automaton
    let trans := A.getTransitionFunction()

    ElimA.setStates(A.getStates())
    ElimA.setFinalStates(A.getFinalStates())
    ElimA.setInitialState(A.getInitialState())

    foreach q1 in A.getStates() do
        console.log(q1)
        let origStates := {}
        add(origStates, trans, q1)

        console.log(q1, "=>", origStates.toString())

        
        foreach a in A.getAlphabet() do
            let destStates := {}
            foreach q in origStates do
                foreach qd in trans(q, a) do
                    console.log(q, a, qd)
                    add(destStates, trans, qd)
                done
            done

            foreach qd in destStates do
                ElimA.addTransition(q1, a, qd)
            done
        done
    done

    return ElimA
end function

run(epsElim, get_automaton(currentAutomaton))
