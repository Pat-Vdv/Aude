include epsElim;

function determinize(A, complete) {
  A = epsElim(A);
  DetA : Automaton;
  Alphabet : Set = A.getAlphabet();
  table : List = A.getTransitionsTable();
  
  function addDeterminizedState(newQ) {
    if(!DetA.hasState(newQ)) {
      DetA.addState(newQ);
      
      foreach(symbol in Alphabet) {
        QDest : Set;
        
        foreach(state in newQ) {
          QDest U= table[state][symbol];
        }

        if(complete || !QDest.isEmpty()) {
           // if completion is not asked, don't create a well state
           addDeterminizedState(QDest);
           DetA.addTransition(newQ, symbol, QDest);
        }
      }
    }
    
    foreach(state in newQ) {
      if(A.isFinalState(state)) {
        DetA.setFinalState(newQ);
        break;
      }
    }
  }
  
  QInit : Set;
  
  QInit.add(A.getInitialState());
  addDeterminizedState(QInit);
  
  DetA.setInitialState(QInit);
  
  return DetA;
}

function isDeterminized(A) {
   t        : Table = A.getTransitionsTable();
   Alphabet : Set = A.getAlphabet();

   for(let state in t) {
      // epsilon transition:
      if(t[state][epsilon] && !t[state][epsilon].isEmpty()) {
         return false;
      }

      foreach(symbol in Alphabet) {
         if(t[state][symbol].card() > 1) {
            return false;
         }
      }
   }
   return true;
}

run(function() {
   let A = get_automaton(currentAutomaton);
   if(isDeterminized(A)) {
      return A;
   }
   return determinize(A);
});