/*
 To look at the differences between two automatons we can look at:
    - the difference between the sets of transitions/states/accessible_states/coaccessible_states/etc.
        functions: setsDiff, transitionsDiff, statesDiff
    - if the automatons have the same states, for two similar states we can look at the differences in their transitions
 */
from automaton2json   import object2automaton

function transitionsDiff (A, B)
    let setA := A.getTransitions()
    let setB := B.getTransitions()
    return setA\setB union setB\setA
end function

function statesDiff (A, B)
    let setA := A.getStates()
    let setB := B.getStates()
    return setA\setB union setB\setA
end function

function finalStatesDiff (A, B)
    let setA := A.getFinalStates()
    let setB := B.getFinalStates()
    return setA\setB union setB\setA
end function

// useful function when the automatons A and B
// share the same states (with the same name)
function transitionsDiffFromState(A, B, stateName)

    let setA := {}
    let setB := {}

    // FIXME factorise this code by creating a special function for it
    foreach transition in A.getTransitions() do
        if transition.startState = stateName or transition.endState = stateName then
            setA.add(transition)
        end if
    end foreach

    foreach transition in B.getTransitions() do
        if transition.startState = stateName or transition.endState = stateName then
            setB.add(transition)
        end if
    end foreach

    return (setA\setB) union (setB\setA)

end function

// this function returns true if the two automatons
function sameNrOfStates (A,B)
    return A.getStates().size = B.getStates().size
end function

function sameStates (A,B)
    returnr A.getStates() = B.getStates()
end function




let A := object2automaton({
                    "states": ["1", "4", "7"],
                    "finalStates": ["1", "2", "3", "5", "6"],
                    "transitions": [
                        ["1", "b", "4"],
                        ["1", "a", "2"],
                        ["4", "b", "4"],
                        ["4", "a", "5"],
                        ["7", "a", "7"],
                        ["7", "b", "7"],
                        ["2", "a", "3"],
                        ["2", "b", "5"],
                        ["3", "a", "3"],
                        ["3", "b", "6"],
                        ["5", "b", "7"],
                        ["5", "a", "6"],
                        ["6", "b", "7"],
                        ["6", "a", "6"]
                    ]
                })

let B := object2automaton({
                    "states": ["1", "4", "7"],
                    "finalStates": ["1", "2", "3", "5", "6"],
                    "transitions": [
                        ["2", "b", "4"],
                        ["1", "a", "2"],
                        ["4", "b", "4"],
                        ["4", "a", "5"],
                        ["7", "a", "7"],
                        ["7", "b", "7"],
                        ["2", "a", "3"],
                        ["2", "b", "5"],
                        ["3", "a", "3"],
                        ["3", "b", "6"],
                        ["5", "b", "7"],
                        ["5", "a", "6"],
                        ["6", "b", "7"],
                        ["6", "a", "6"]
                    ]
                })







